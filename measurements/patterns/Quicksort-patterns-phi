# number=50 length=130 file=texts/Quicksort forbidden=
ing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.len tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtboolean tracing.SortUtils.swap(Object[], int, int)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.Sortrable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean.swap(Object[], int, int)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Coils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparaan tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<(Comparable[], int, int)
>int tracing.QuickSort.randomPartition(Comparable[], int, int)
>boolean tracing.SortUtils.swap(Object[] Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<bomparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<booarable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparabparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean tracing.SortUtils.swap(Object[], int, int)
>boolean traciint)
>int tracing.QuickSort.randomPartition(Comparable[], int, int)
>boolean tracing.SortUtils.swap(Object[], int, int)
<booleavoid tracing.QuickSort.doSort(Comparable[], int, int)
<void tracing.QuickSort.doSort(Comparable[], int, int)
>void tracing.Quick
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracile)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tromparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, inable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean ean tracing.SortUtils.swap(Object[], int, int)
<boolean tracing.SortUtils.swap(Object[], int, int)
>int tracing.QuickSort.partitComparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Compcing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.lt.doSort(Comparable[], int, int)
>void tracing.QuickSort.doSort(Comparable[], int, int)
<void tracing.QuickSort.doSort(Comparabl(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean tracing.SortUtils.swap(Object[], int, int)s.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparablomparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Compale)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean tracinrable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean trae, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(C
>int tracing.QuickSort.randomPartition(Comparable[], int, int)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean trng.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.lesomparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<booan tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUarable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolea<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracingcing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.l>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUti, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparablert(Comparable[], int, int)
<void tracing.QuickSort.doSort(Comparable[], int, int)
<void tracing.QuickSort.doSort(Comparable[], iboolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.oolean tracing.SortUtils.less(Comparable, Comparable)
<int tracing.QuickSort.partition(Comparable[], int, int)
<int tracing.Quics.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparabl int)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean able, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.swap(Object[], int, int)
<boolean tracing.SortUtils.swap(Objeracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtilsortUtils.less(Comparable, Comparable)
>boolean tracing.SortUtils.less(Comparable, Comparable)
<boolean tracing.SortUtils.less(Co